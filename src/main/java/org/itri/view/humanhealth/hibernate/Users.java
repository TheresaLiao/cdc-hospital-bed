package org.itri.view.humanhealth.hibernate;
// Generated 2020/4/24 �U�� 08:59:27 by Hibernate Tools 4.0.0.Final
import javax.persistence.GeneratedValue;import javax.persistence.SequenceGenerator;import javax.persistence.GenerationType;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Users generated by hbm2java
 */
@SuppressWarnings("serial")@Entity
@Table(name = "users")
public class Users implements java.io.Serializable {

	private long usersId;
	private String email;
	private String password;
	private String tmpKey;
	private String osVersion;
	private String appVersion;
	private String userRole;
	private Date timeCreated;
	private Date lastUpdated;
	private Date lastSync;
	private Boolean isLogin;
	private Date lastLogin;
	private Date lastActive;
	private Date tmpKeyLastUpdated;
	private boolean isExpired;
	private boolean isDeleted;
	private Set<PatientInfo> patientInfos = new HashSet<PatientInfo>(0);
	private Set<Room> rooms = new HashSet<Room>(0);
	private Set<PatientThreshold> patientThresholds = new HashSet<PatientThreshold>(0);

	public Users() {
	}

	public Users(long usersId, String password, String osVersion, String appVersion, String userRole, Date timeCreated,
			Date lastUpdated, Date lastLogin, boolean isExpired, boolean isDeleted) {
		this.usersId = usersId;
		this.password = password;
		this.osVersion = osVersion;
		this.appVersion = appVersion;
		this.userRole = userRole;
		this.timeCreated = timeCreated;
		this.lastUpdated = lastUpdated;
		this.lastLogin = lastLogin;
		this.isExpired = isExpired;
		this.isDeleted = isDeleted;
	}

	public Users(long usersId, String email, String password, String tmpKey, String osVersion, String appVersion,
			String userRole, Date timeCreated, Date lastUpdated, Date lastSync, Boolean isLogin, Date lastLogin,
			Date lastActive, Date tmpKeyLastUpdated, boolean isExpired, boolean isDeleted,
			Set<PatientInfo> patientInfos, Set<Room> rooms, Set<PatientThreshold> patientThresholds) {
		this.usersId = usersId;
		this.email = email;
		this.password = password;
		this.tmpKey = tmpKey;
		this.osVersion = osVersion;
		this.appVersion = appVersion;
		this.userRole = userRole;
		this.timeCreated = timeCreated;
		this.lastUpdated = lastUpdated;
		this.lastSync = lastSync;
		this.isLogin = isLogin;
		this.lastLogin = lastLogin;
		this.lastActive = lastActive;
		this.tmpKeyLastUpdated = tmpKeyLastUpdated;
		this.isExpired = isExpired;
		this.isDeleted = isDeleted;
		this.patientInfos = patientInfos;
		this.rooms = rooms;
		this.patientThresholds = patientThresholds;
	}

	@SequenceGenerator(name="users_seq", sequenceName="users_users_id_seq", allocationSize=1)	@GeneratedValue(strategy=GenerationType.SEQUENCE, generator="users_seq")	@Id

	@Column(name = "users_id", unique = true, nullable = false)
	public long getUsersId() {
		return this.usersId;
	}

	public void setUsersId(long usersId) {
		this.usersId = usersId;
	}

	@Column(name = "email", length = 128)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "password", nullable = false, length = 512)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "tmp_key", length = 128)
	public String getTmpKey() {
		return this.tmpKey;
	}

	public void setTmpKey(String tmpKey) {
		this.tmpKey = tmpKey;
	}

	@Column(name = "os_version", nullable = false, length = 128)
	public String getOsVersion() {
		return this.osVersion;
	}

	public void setOsVersion(String osVersion) {
		this.osVersion = osVersion;
	}

	@Column(name = "app_version", nullable = false, length = 128)
	public String getAppVersion() {
		return this.appVersion;
	}

	public void setAppVersion(String appVersion) {
		this.appVersion = appVersion;
	}

	@Column(name = "user_role", nullable = false, length = 10)
	public String getUserRole() {
		return this.userRole;
	}

	public void setUserRole(String userRole) {
		this.userRole = userRole;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "time_created", nullable = false, length = 29)
	public Date getTimeCreated() {
		return this.timeCreated;
	}

	public void setTimeCreated(Date timeCreated) {
		this.timeCreated = timeCreated;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated", nullable = false, length = 29)
	public Date getLastUpdated() {
		return this.lastUpdated;
	}

	public void setLastUpdated(Date lastUpdated) {
		this.lastUpdated = lastUpdated;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_sync", length = 29)
	public Date getLastSync() {
		return this.lastSync;
	}

	public void setLastSync(Date lastSync) {
		this.lastSync = lastSync;
	}

	@Column(name = "is_login")
	public Boolean getIsLogin() {
		return this.isLogin;
	}

	public void setIsLogin(Boolean isLogin) {
		this.isLogin = isLogin;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_login", nullable = false, length = 29)
	public Date getLastLogin() {
		return this.lastLogin;
	}

	public void setLastLogin(Date lastLogin) {
		this.lastLogin = lastLogin;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_active", length = 29)
	public Date getLastActive() {
		return this.lastActive;
	}

	public void setLastActive(Date lastActive) {
		this.lastActive = lastActive;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "tmp_key_last_updated", length = 29)
	public Date getTmpKeyLastUpdated() {
		return this.tmpKeyLastUpdated;
	}

	public void setTmpKeyLastUpdated(Date tmpKeyLastUpdated) {
		this.tmpKeyLastUpdated = tmpKeyLastUpdated;
	}

	@Column(name = "is_expired", nullable = false)
	public boolean isIsExpired() {
		return this.isExpired;
	}

	public void setIsExpired(boolean isExpired) {
		this.isExpired = isExpired;
	}

	@Column(name = "is_deleted", nullable = false)
	public boolean isIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(boolean isDeleted) {
		this.isDeleted = isDeleted;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<PatientInfo> getPatientInfos() {
		return this.patientInfos;
	}

	public void setPatientInfos(Set<PatientInfo> patientInfos) {
		this.patientInfos = patientInfos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Room> getRooms() {
		return this.rooms;
	}

	public void setRooms(Set<Room> rooms) {
		this.rooms = rooms;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<PatientThreshold> getPatientThresholds() {
		return this.patientThresholds;
	}

	public void setPatientThresholds(Set<PatientThreshold> patientThresholds) {
		this.patientThresholds = patientThresholds;
	}

}
